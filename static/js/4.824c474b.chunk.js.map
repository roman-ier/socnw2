{"version":3,"sources":["comp/pages/Dialogs/Dialogs.module.css","comp/pages/Dialogs/DialogItem/DialogItem.jsx","comp/pages/Dialogs/Message/Message.jsx","comp/pages/Dialogs/AddMessageForm/AddMessageForm.jsx","comp/pages/Dialogs/Dialogs.jsx","comp/pages/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","type","component","FormControl","validate","requiredField","placeholder","Dialogs","state","dialogPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","isAuth","Redirect","dialogsItems","val","sendMessages","onDiaChange","compose","connect","dispatch","newMessageBody","addDiaActionCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCYnKC,EATI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCDvBC,EAHC,SAACT,GACb,OAAO,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,yCCAvCC,EAAcC,YAAiB,IAkBtBC,cAAU,CAACC,KAAM,wBAAjBD,EAjBQ,SAACb,GACpB,OAAO,0BAAMe,SAAUf,EAAMgB,cACzB,6BACI,kBAACC,EAAA,EAAD,CAAOC,KAAK,WACLC,UAAWC,IACXC,SAAU,CAACC,IAAeX,GAC1BY,YAAY,cACZf,KAAK,iBAGhB,6BACI,gDCqBGgB,EA9BC,SAACxB,GACb,IAAIyB,EAAQzB,EAAM0B,WACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CACzCtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE5B,QACrB8B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAC3CxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAEhC,QAE/B,IAAKF,EAAMmC,OAAQ,OAAO,kBAACC,EAAA,EAAD,CAAU7B,GAAI,WAOxC,OACI,yBAAKJ,UAAWC,IAAEwB,SACd,yBAAKzB,UAAWC,IAAEiC,cACbV,GAEL,yBAAKxB,UAAWC,IAAE6B,UACbD,GAEL,6BACI,wCACA,kBAAC,EAAD,CAAgBjB,SAfN,SAACuB,GACnBtC,EAAMuC,aAAaD,EAAIE,mB,uBCEhBC,sBACXC,aAdkB,SAACjB,GACnB,MAAO,CACHC,WAAYD,EAAMC,eAGD,SAACiB,GACtB,MAAO,CACHJ,aAAc,SAACK,GACXD,EAASE,YAAoBD,SAOrCE,IAFWL,CAEOjB","file":"static/js/4.824c474b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1sZFn\",\"dialogsItems\":\"Dialogs_dialogsItems__1l6QA\",\"active\":\"Dialogs_active__2wVrz\",\"messages\":\"Dialogs_messages__2GuPo\",\"message\":\"Dialogs_message__172Ui\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\nexport default Message;","import {maxLengthCreator, requiredField} from \"../../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {FormControl} from \"../../../Common/FormsControl/FormsControl\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field type='textarea'\r\n                   component={FormControl}\r\n                   validate={[requiredField, maxLength10]}\r\n                   placeholder='messageText'\r\n                   name='onDiaChange'\r\n            />\r\n        </div>\r\n        <div>\r\n            <button>add Dia</button>\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem\r\n        name={d.name} key={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message\r\n        message={m.message} key={m.id}/>);\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n    const addNewMessage = (val) => {\r\n        props.sendMessages(val.onDiaChange)\r\n        //props.resetForm()\r\n\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <div>\r\n                <h3>my posts</h3>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","//import React from 'react';\r\nimport {addDiaActionCreator} from '../../../redux/dialog-reducer';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessages: (newMessageBody) => {\r\n            dispatch(addDiaActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs)"],"sourceRoot":""}